{
	"info": {
		"_postman_id": "68711e78-6932-4052-bfcd-ecf59fbd77e4",
		"name": "Producto",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26638262"
	},
	"item": [
		{
			"name": "Crear un producto valido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"El codigo esperado es 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"var data = pm.response.json()\r",
							"pm.globals.set(\"id_producto\", data.id);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Alpinito\",\r\n    \"precio\": 2000,\r\n    \"tipo\":\"Perecedero\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/products",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear un producto invalido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"El codigo esperado es 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"mensaje de error esperado\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El tipo del producto no se encuentra en los permitidos\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Alpinito extra azucarado\",\r\n    \"precio\": 2000,\r\n    \"tipo\":\"DaÃ±ino\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/products",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Listar productos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"El codigo esperado es 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test('Numero de productos > 0' + 0, function () {\r",
							"   var data = pm.response.json()\r",
							"   pm.expect(data.length).to.greaterThan(0)\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/products",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un producto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Es codigo esperado es 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/products/{{id_producto}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"products",
						"{{id_producto}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un producto invalido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"El codigo esperado es 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Mensaje de error esperado\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"Producto no encontrado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/products/-1",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"products",
						"-1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar un producto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"El codigo esperado es 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Alpinito\",\r\n    \"precio\": 4000,\r\n    \"tipo\":\"No perecedero\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/products/{{id_producto}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"products",
						"{{id_producto}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar un producto invalido/inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"El codigo esperado es 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Mensaje de error esperado\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"Producto no encontrado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Alpinito\",\r\n    \"precio\": 4000,\r\n    \"tipo\":\"Perecedero\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/products/-1",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"products",
						"-1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar un producto con un tipo invalido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"El codigo esperado es 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Mensaje de error esperado\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El tipo del producto no se encuentra en los permitidos\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Alpinito\",\r\n    \"precio\": 4000,\r\n    \"tipo\":\"Vencido\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/products/{{id_producto}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"products",
						"{{id_producto}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar un producto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"El codigo esperado es 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/products/{{id_producto}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"products",
						"{{id_producto}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar un producto invalido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"El codigo esperado es 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Mensaje de error esperado\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"Producto no encontrado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/products/-1",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"products",
						"-1"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "http://localhost:3000",
			"type": "string"
		}
	]
}